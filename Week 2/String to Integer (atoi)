class Solution(object):
    def myAtoi(self, s):
        
        i, n = 0, len(s)
        sign = 1
        result = 0
        INT_MAX, INT_MIN = 2**31 - 1, -2**31
        
        # Step 1: skip whitespace
        while i < n and s[i] == ' ':
            i += 1
        
        # Step 2: check for sign
        if i < n and (s[i] == '+' or s[i] == '-'):
            sign = -1 if s[i] == '-' else 1
            i += 1
        
        # Step 3: convert digits
        while i < n and s[i].isdigit():
            digit = int(s[i])
            
            # Step 4: check overflow before multiplying
            if result > (INT_MAX - digit) // 10:
                return INT_MAX if sign == 1 else INT_MIN
            
            result = result * 10 + digit
            i += 1
        
        # Step 5: return signed result
        return sign * result
